@page
@model SWAPI.Pages.PeopleModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SWAPI - People</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function loadCharacterDetails(url) {
            fetch(url)
                .then(response => response.json())
                .then(data => {
                    const detailsDiv = document.getElementById('characterDetails');
                    // Busca o planeta natal do personagem e exibe o nome dele ao invés da url
                    fetch(data.homeworld)
                        .then(response => response.json())
                        .then(planetData => {
                            const planetName = planetData.name;
                            // Busca os filmes que o personagem já participou para mostrar
                            let filmPromises = data.films.map(filmUrl => fetch(filmUrl).then(res => res.json()));
                            Promise.all(filmPromises).then(filmsData => {
                                let filmsList = filmsData.map(film => `<li class="custom-list-item">${film.title} (${film.release_date})</li>`).join("");

                                detailsDiv.innerHTML = `
                                    <div class="custom-card">
                                        <h3>${data.name}</h3>
                                        <p><strong>Height:</strong> ${data.height} cm</p>
                                        <p><strong>Mass:</strong> ${data.mass} kg</p>
                                        <p><strong>Hair Color:</strong> ${data.hair_color}</p>
                                        <p><strong>Skin Color:</strong> ${data.skin_color}</p>
                                        <p><strong>Eye Color:</strong> ${data.eye_color}</p>
                                        <p><strong>Birth Year:</strong> ${data.birth_year}</p>
                                        <p><strong>Gender:</strong> ${data.gender}</p>
                                        <p><strong>Homeworld:</strong> ${planetName}</p>
                                        <h4>Filmes:</h4>
                                        <ul class="custom-list">${filmsList}</ul>
                                    </div>
                                `;
                            }).catch(error => console.error('Erro ao buscar filmes:', error));
                        })
                        .catch(error => console.error('Error loading planet details:', error));
                })
                .catch(error => console.error('Error loading character details:', error));
        }

        function filterCharacters(gender) {
            const allCharacters = document.querySelectorAll('.character-item');

            allCharacters.forEach(character => {
                if (gender === 'all' || character.getAttribute('data-gender') === gender) {
                    character.style.display = 'block';
                } else {
                    character.style.display = 'none';
                }
            });
        }
    </script>
</head>
<body>
    <div class="container mt-4">
        <h1 class="text-center">Personagens de Star Wars</h1>

        <div class="text-center mb-4">
            <button class="btn btn-primary mx-2" onclick="filterCharacters('all')">Todos</button>
            <button class="btn btn-primary mx-2" onclick="filterCharacters('male')">Masculino</button>
            <button class="btn btn-primary mx-2" onclick="filterCharacters('female')">Feminino</button>
            <button class="btn btn-primary mx-2" onclick="filterCharacters('n/a')">Desconhecido</button>
        </div>

        @if (Model.People != null && Model.People.Any())
        {
            <div class="list-group">
                @foreach (var person in Model.People)
                {
                    <a href="javascript:void(0);"
                       class="list-group-item list-group-item-action character-item"
                       onclick="loadCharacterDetails('@person.Url')"
                       data-gender="@person.Gender.ToLower()">
                        <strong>@person.Name </strong> - @person.Height cm - @person.Mass Kg
                    </a>
                }
            </div>

            //Div para mostrar os detalhes do personagem ao clicar nele
            <div id="characterDetails" class="mt-4">
                <h4>Cliquei no personagem para ver suas características</h4>
            </div>
        }
        else
        {
            <p>No characters available.</p>
        }
    </div>
</body>
</html>
